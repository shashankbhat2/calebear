// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum IntegrationType {
  GOOGLE_CALENDAR
  // OUTLOOK_CALENDAR // Future integrations
}

enum Role {
  USER
  ADMIN
  SUPER_ADMIN
}

model User {
  id        String  @id @default(cuid())
  email     String  @unique
  password  String? // Optional because of OAuth, or if email verification is a separate step
  firstName String?
  lastName  String?
  picture   String? // URL to profile picture
  googleId  String? @unique // To store Google user ID

  integrations Integration[] // Relation to Integrations

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  role Role @default(USER)

  @@map("users") // Optional: specify table name in the database
}

model Integration {
  id           String          @id @default(cuid())
  userId       String
  type         IntegrationType
  accessToken  String          @db.Text // Access tokens can be long
  refreshToken String?         @db.Text // Refresh tokens can also be long and are optional for some OAuth flows
  lastSync     DateTime?
  externalId   String?         @unique // e.g., Google Calendar ID, subscription ID for webhooks
  metadata     Json? // For any other integration-specific data

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, type]) // A user can have only one integration of a certain type
  @@index([userId])
}
